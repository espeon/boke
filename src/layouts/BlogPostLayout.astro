---
import { type CollectionEntry } from "astro:content";
import TableOfContents from "../components/TableOfContents.tsx";
import { formatDate } from "../lib/utils";
import Layout from "./Layout.astro";

interface Props {
  post: CollectionEntry<"posts">;
}

// Utility to estimate reading time
function estimateReadingTime(text: string, wordsPerMinute = 225) {
  const wordCount = text.trim().split(/\s+/).length;
  const minutes = Math.ceil(wordCount / wordsPerMinute);
  return minutes;
}

const { post } = Astro.props;
const { Content } = await post.render();
const readingTime = estimateReadingTime(post.body ?? "");
const readingHours = Math.floor(readingTime / 60);
const readingMinutes = readingTime % 60;
---

<Layout
  title={post.data.title}
  description={post.data.description}
  image={post.data.image}
  date={post.data.date}
  className="blog-post-layout"
>
  <div class="blog-post-container">
    <!-- Main content area -->
    <main>
      <header class="blog-post-header">
        <h1 class="mb-1 flex flex-row gap-4 text-3xl font-medium">
          {post.data.title}
          {
            post.data.draft && (
              <p class="mt-1.5 mb-1 flex h-min flex-row items-center justify-center gap-2 rounded-full border border-neutral-400/50 bg-neutral-800 px-2 align-middle text-base font-semibold text-pink-600">
                {" "}
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="18"
                  height="18"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="lucide lucide-eye-off-icon lucide-eye-off"
                >
                  <>
                    <path d="M10.733 5.076a10.744 10.744 0 0 1 11.205 6.575 1 1 0 0 1 0 .696 10.747 10.747 0 0 1-1.444 2.49" />
                    <path d="M14.084 14.158a3 3 0 0 1-4.242-4.242" />
                    <path d="M17.479 17.499a10.75 10.75 0 0 1-15.417-5.151 1 1 0 0 1 0-.696 10.75 10.75 0 0 1 4.446-5.143" />
                    <path d="m2 2 20 20" />
                  </>
                </svg>{" "}
                Draft
              </p>
            )
          }
        </h1>
        {
          post.data.description && (
            <p class="mb-2 font-medium text-zinc-500">
              {post.data.description}
            </p>
          )
        }
        <p class="mb-1 font-medium text-zinc-500">
          {formatDate(post.data.date)}
        </p>
        <p class="mb-8 font-medium text-zinc-500">
          {readingHours ? `${readingHours} hr ` : ""}{readingMinutes} min read
        </p>

        <article class="prose prose-zinc dark:prose-invert max-w-none">
          <Content />
        </article>
      </header>

      <!-- Table of Contents Sidebar -->
      <TableOfContents client:load />
    </main>
  </div>

  <style>
    .blog-post-container {
      position: relative;
    }

    /* TOC positioning */
    :global(.table-of-contents) {
      display: none;
    }

    /* Show TOC on larger screens - floating to the right */
    @media (min-width: 1024px) {
      :global(.table-of-contents) {
        display: block;
        position: fixed;
        right: 50%;
        left: auto;
        top: 10%;
        width: 250px;
        max-height: calc(100vh - 4rem);
        overflow-y: auto;
        z-index: 10;
        opacity: 1;
      }
    }

    /* Wider screens - move TOC further right */
    @media (min-width: 1280px) {
      :global(.table-of-contents) {
        right: 3rem;
        width: 280px;
      }
    }

    /* Extra wide screens - even more space */
    @media (min-width: 1536px) {
      :global(.table-of-contents) {
        right: 4rem;
        width: 300px;
      }
    }

    /* Style the prose content */
    .prose {
      font-size: 1.1rem;
      line-height: 1.7;
    }

    .prose h1,
    .prose h2,
    .prose h3,
    .prose h4,
    .prose h5,
    .prose h6 {
      scroll-margin-top: 2rem;
    }

    .prose h2 {
      margin-top: 2.5rem;
      margin-bottom: 1rem;
    }

    .prose h3 {
      margin-top: 2rem;
      margin-bottom: 0.75rem;
    }

    .prose p {
      margin-bottom: 1.5rem;
    }

    /* Mobile TOC - show as collapsible at top */
    @media (max-width: 1023px) {
      :global(.table-of-contents) {
        display: block;
        position: static;
        width: 100%;
        max-height: 200px;
        margin-bottom: 2rem;
        padding: 1rem;
        background: rgba(255, 255, 255, 0.8);
        border: 1px solid rgba(228, 228, 231, 0.5);
        border-radius: 0.5rem;
        backdrop-filter: blur(10px);
        transform: none;
        box-shadow: none;
      }

      :global(.dark .table-of-contents) {
        background: rgba(39, 39, 42, 0.8);
        border-color: rgba(63, 63, 70, 0.5);
      }
    }

    /* Fade-in animation for desktop TOC */
    @keyframes fadeInTOC {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }
  </style>
</Layout>
